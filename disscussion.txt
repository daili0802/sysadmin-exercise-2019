ISRDI IT 2019 Sysadmin Exercise
Candidate: Li Dai
First of all, I would love to say thank you to ISRDI and especially to Mr. Fabrizio for putting together this great at-home-exercise and giving me the opportunity to participate in it. I think this exercise not only examines candidate’s technical skills but also a good way to see someone’s logical thinking and basic communication skills. I also found the given documentation very helpful and files at GitHub repository hints the overall project. More importantly, it is truly a great way for any candidate to have a picture of what System administrator’s work at ISRDI is like.
Problem-solving Strategy:
My problem-solving strategy always starts from understanding the challenge. To this specific one, reading over the given documentation, take notes along the way was first step. To my best understanding, the general requirement of this exercise, is to parse some meaningful data, store and organize them as requested to a database and host a flask web application to provide basics functionality. prepare a “Phusion passenger” web application server with “Nginx” as reverse proxy to ultimately accomplish the task, was the second step. This problem can be solved with configuring a containerized “passenger + nginx” web server. However, with lacking knowledge of passenger, I needed online researching, to better understand the configurations and best practices for it. As well as, utilizing the given python source code files and conf files. Third problem comes to understand the given fixed width data file (I did find out that race code 120 means “Blank (white)”), again understanding the basic structure is very important and that mainly relies on studying the provided documentation. To me, a well-structured python script that parses fixed width data, is a good choice. The intended python script needs to be configured to connect with MySQL database, properly parse the given data by select only “personal data”, generate required UNIQUE_ID by concatenating needed data fields and finally execute a MySQL insert query and commit all data to database. I had a tough moment at this step, where MySQL8 is using “caching_sha2_password” encryption method instead of “mysql_native_password” when many versions of python’s MySQL connector wouldn’t support. Some google search help me figure this out by installing a separate mysql-connector-8.0.16, and by forcing the server side to use older version of authentication method. Finally, dockerize app. MySQL was second container I created for this exercise, so that I have a database to test the data parsing python script with. I decided to choose docker-compose.yml as a basic container orchestrator, so that the containerized structure can be managed easily (build, rebuild and run).  And obviously, taking a detailed note stream helped me throughout the process, no matter it is debugging or creation of a dockerfile. 
On the other hand, it was a little bit unfortunate that it is only two weeks away from my school finals week, and time is extremely tight. If I have more time to spend on this project, I would want to utilized better container orchestrator such as Kubernetes (or minikube as a single host version) to manage the infrastructure. If with that being implemented, the CI/CD pipeline concept might be the second step, since we are already using GitHub as code repository, it is fairly close to where it only needs a Jenkins work unit to start the process. Also, in a couple different places, there’re hard coded, unencrypted database credentials and environmental information, and those cloud have been hided better with sperate configuration files. Lastly, my original goal was to also have a shell script to automate the whole process, and that way some needed dependencies can also be included. 
By the time I'm reviewing this documentation and writings, I found in my screenshot where the unique_id seem to be one digit off compare to the given example. I believe I understood that, the given data starts to count from 1 but python starts with 0, and I think I made adjustments for the reason in the code. I think I cloud not find a perfect solution for it at the moment. Please do let me know what my problem is after grading.
Thank you again for reading and grading my work.  
Li Dai 

